stages:
  - build
  - deploy

variables:
  IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
#  CI_DEBUG_TRACE: "true"

####################################
##### TEMPLATES ####################
####################################

#### API #########################
.build: &build
  allow_failure: true
  services:
    - name: docker:18.09.8-dind
  stage: build
  tags:
    - app_powerboard_paydock
  before_script:
    - docker system prune -af || true
    - docker login -u $PERSONAL_ACCESS_TOKEN_NAME -p $PERSONAL_ACCESS_TOKEN_KEY $CI_REGISTRY



# deploy template:
.deploy_to: &deploy_to
  allow_failure: false
  stage: deploy
  tags:
    - app_powerboard_paydock
  before_script:
    - hostname
    - pwd
    - docker login -u $PERSONAL_ACCESS_TOKEN_NAME -p $PERSONAL_ACCESS_TOKEN_KEY $CI_REGISTRY
    - docker swarm init || true
    - docker network create -d overlay --attachable net_proxy || true
    - docker network create -d overlay --attachable net_data || true


###############################
#### BUILD ####################
###############################

build_client:
  when: manual
  <<: *build
  script:
    - docker pull $IMAGE/client:latest || true
    - >
      docker build
      --build-arg HOST
      --pull
      --cache-from $IMAGE/client:latest
      --tag $IMAGE/client:${CI_COMMIT_SHA}
      -f cnf/client/Dockerfile
      .
    - docker tag $IMAGE/client:${CI_COMMIT_SHA} $IMAGE/client:latest
    - docker push $IMAGE/client:${CI_COMMIT_SHA}
    - docker push $IMAGE/client:latest
  only:
    - main



################################
#### DEPLOY ####################
################################

deploy_client:
  when: manual
  <<: *deploy_to
  script:
    - docker pull $IMAGE/client:${CI_COMMIT_SHA}
    - docker stack deploy -c $(pwd)/cnf/client/docker-compose.yml jsp --with-registry-auth
  only:
    - main
